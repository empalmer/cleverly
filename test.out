sample.interval=20000
"names<-.grouped_df" "names<-" "names<-" "initialize" "DataMask$new" "summarise_cols" "summarise.grouped_df" "dplyr::summarise" ".External2" "%>%" "get_mi_vec" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"length" "attr.all.equal" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"%in%" ".getGeneric" "getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"order" "make.names" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "path" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "dev_topic_path" "dev_topic_find" "?" 
"lazyLoadDBfetch" "loadRdMacros" "initialRdMacros" "tools::loadPkgRdMacros" "load_rd_macros" "build_topic_index" "dev_topic_index" "dev_topic_path" "dev_topic_find" "?" 
"lazyLoadDBfetch" "%in%" "Rd2txt" "tryCatchList" "tryCatch" ".Rd_get_text" ".Rd_get_title" "is.factor" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"lapply" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"simplify2array" "sapply" "gList" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"names" "checkNA" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"split.default" "split" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.na" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.unit" "unit" "is.unit" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"new.env" "pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"paste0" "vpname" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$" "depth.path" "depth" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"substring" ".rs.getCompletionsPackages" ".rs.rpc.get_completions" 
"close.connection" "close" "readRDS" "index.search" "utils::help" ".External2" "inject" "help" "eval" "eval" ".rs.getHelp" ".rs.getHelpPackage" "impl" ".rs.rpc.get_help" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"file" "readLines" "match_contents" "f" "find_root" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "pkgload::load_all" "devtools::load_all" 
"dir" "headers" "mtime" "needs_compile" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"%in%" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc" "pkg_links_to_cpp11" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"is.na" "isTRUE" "parse" "withCallingHandlers" "suppressWarnings" ".parse_code_file" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"as.list" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"deparse" "predicate" "f" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"file" "readLines" "iconv" "withCallingHandlers" "suppressWarnings" ".parse_code_file" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".Call" "do.call" "withCallingHandlers" "chain_call" "process_initialize" "initialize" "process$new" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"eval" "see_if" "assert_that" "poll" "process_poll_io" "proc$poll_io" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"lazyLoadDBfetch" ".Call" "env_get_list" "unregister_namespace" "unregister" "pkgload::load_all" "devtools::load_all" 
"readLines" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "process_imports" "load_imports" "pkgload::load_all" "devtools::load_all" 
"apply" "path" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "file.path" "package_file" "load_data" "pkgload::load_all" "devtools::load_all" 
"readLines" "read_lines_enc" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "assign_depends" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"FUN" "vapply" "vec_recycle_common" "df_list" "new_data_frame" "data_frame" "as_version_info" "pkg_version_info" "check_installed" "use_dependency" "usethis::use_rcpp" 
"lazyLoadDBfetch" "paste0" "path" "package_doc_path" "proj_path" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"paste0" "ansi_style_str" "%||%" "create_ansi_style" "make_ansi_style" "create_formatter" "merge_embedded_styles" "clii__container_start" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "clii__inline" "app$inline" "clii__xtext" "app$xtext" "clii_text" "app$text" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli::cli_bullets" "ui_bullets" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"grepl" "is_r_color" "make_ansi_style" "FUN" "lapply" "<Anonymous>" "do.call" "FUN" "lapply" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"findCenvVar" "getInlineInfo" "isBaseVar" "isLoopTopFun" "checkSkipLoopCntxt" "checkSkipLoopCntxtList" "checkSkipLoopCntxt" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "theme$string" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"writeChar" "write_nix" "chosen_write_clip" "write_clip" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "clipr_available_handler" "clipr_results_check" "clipr::clipr_available" "ui_code_snippet" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"readRDS" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "uses_git" "rstudio_git_tickle" "use_git_ignore" "use_src" "usethis::use_rcpp" 
"system" "withCallingHandlers" "suppressWarnings" "Sys.which" "cmd_exists" "find_git_cmd" "has_git_cmd" "set_default_cred_helper" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "uses_git" "rstudio_git_tickle" "use_git_ignore" "use_src" "usethis::use_rcpp" 
"lockBinding" "description$new" "desc::desc" "proj_desc" "project_name" "paste0" "path" "package_doc_path" "proj_path" "block_append" "roxygen_ns_append" "use_src" "usethis::use_rcpp" 
"vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc" "proj_desc" "project_name" "eval" "eval" "withCallingHandlers" "with_glue_error" ".transformer" "%||%" "<Anonymous>" "glue_data" "glue" "eval" "eval" "withCallingHandlers" "with_glue_error" ".transformer" "%||%" "<Anonymous>" "glue_data" "glue" "glue_collapse" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "usethis::use_rcpp" 
"scan" "chosen_read_clip" "read_clip" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "clipr_available_handler" "clipr_results_check" "clipr::clipr_available" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "usethis::use_rcpp" 
"glue_delay" "FUN" "lapply" "structure" "%in%" "cli__message" "cli::cli_bullets" "ui_bullets" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "usethis::use_rcpp" 
"sys.calls" "as.list" "trace_back" "with_options" "rlang::abort" "cli::cli_abort" "compute_active_name" "compute_name" "path" "usethis::use_rcpp" 
"callFun" "ns$getVersion" "get_data" "detect_new" "rstudio$detect" "num_ansi_colors" "col_yellow" "paste0" "x" "call_if_fun" "clii__xtext" "app$xtext" "clii_text" "app$text" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli__fmt" "cli_fmt" "cli_format" ".rlang_cli_format" "cli_format" "cnd_message_format" "cnd_message_format_prefixed" "cnd_message" "signal_abort" "rlang::abort" "cli::cli_abort" "compute_active_name" "compute_name" "path" "usethis::use_rcpp" 
"<Anonymous>" "mapply" "Map" "df_cast" "new_data_frame" "rlib_df_cast" "vec_cast" "vec_assign" "pkg_version_info" "check_installed" "use_dependency" "usethis::use_rcpp" 
"FUN" "vapply" "vcapply" "ansi_strwrap" "clii__xtext" "app$xtext" "clii_text" "app$text" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli::cli_bullets" "ui_bullets" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"codeBufCode" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "reserved" "paste0" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"codeBufCode" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "reserved" "paste0" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"lapply" "unlist" "constantFoldCall" "constantFold" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "theme$string" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"writeChar" "write_nix" "chosen_write_clip" "write_clip" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "clipr_available_handler" "clipr_results_check" "clipr::clipr_available" "ui_code_snippet" "block_append" "roxygen_ns_append" "usethis::use_rcpp" 
"file.exists" "find_package_root" "find_description" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc" "proj_desc" "project_name" "paste0" "path" "package_doc_path" "proj_path" "block_append" "roxygen_ns_append" "use_src" "usethis::use_rcpp" 
"genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "reserved" "paste0" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "usethis::use_rcpp" 
"writeChar" "write_nix" "chosen_write_clip" "write_clip" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "clipr_available_handler" "clipr_results_check" "clipr::clipr_available" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "usethis::use_rcpp" 
"rank" "as.vector" "xtfrm.default" "NextMethod" "xtfrm.fs_path" "xtfrm" "xtfrm" "as.vector" "FUN" "lapply" "order" "NextMethod" "new_fs_path" "[.fs_path" "[" "sort.default" "sort" "path_common" "is_in_proj" "proj_rel_path" "path_dir" "compute_active_name" "compute_name" "path" "usethis::use_rcpp" 
"utils::menu" "ui_yep" "can_overwrite" "write_over" "use_template" "usethis::use_rcpp" 
"utils::menu" "ui_yep" "can_overwrite" "write_over" "use_template" "usethis::use_rcpp" 
"vapply" "path_norm" "path_abs" "path_rel" "proj_rel_path" "pth" "eval" "eval" "withCallingHandlers" "chain_error" "%??%" ".transformer" "%||%" "<Anonymous>" "glue" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "structure" "%in%" "cli__message" "cli::cli_bullets" "ui_bullets" "write_over" "use_template" "usethis::use_rcpp" 
"unique" "substr" "str_tail" "FUN" "lapply" "FUN" "lapply" "%||%" "unique.default" "I" "data.frame" "theme_create" "structure" "clii_add_theme" "app$add_theme" "clii_div" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli::cli_div" "ui_bullets" "edit_file" "usethis::use_rcpp" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"%in%" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"match_selector_node" "match_selector" "clii__container_start" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli__fmt" "cli_fmt" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc" "pkg_links_to_cpp11" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"as.list" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".deparseOpts" "deparse" "predicate" "f" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"parse" "withCallingHandlers" "suppressWarnings" ".parse_code_file" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"grepl" ".make_numeric_version" "numeric_version" "as.numeric_version" "Ops.numeric_version" "get_data" "detect_new" "rstudio$detect" "cli::num_ansi_colors" "compiler_flags" "withr_set_makevars" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".Call" "do.call" "withCallingHandlers" "chain_call" "process_initialize" "initialize" "process$new" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"search" "get_data" "detect_new" "rstudio$detect" "<Anonymous>" "style" "do_new_check" "FUN" "lapply" "block_cb" "stdout_callback" "do_output" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "get_call_scope" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" "add_trace_back" "<Anonymous>" "<Anonymous>" "signalCondition" "throw" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"gzfile" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "find.package" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"paste0" "grepl" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "pkgload::load_all" "devtools::load_all" 
"read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc_get_deps" "pkg_links_to_rcpp" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".deparseOpts" "deparse" "predicate" "f" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"getLoadedDLLs" ".rs.getNativeSymbols" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".Call" "do.call" "withCallingHandlers" "chain_call" "process_initialize" "initialize" "process$new" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"%in%" "findLocals1" "lapply" "FUN" "lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "add_trace_back" "<Anonymous>" "<Anonymous>" "signalCondition" "throw" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"lapply" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"postDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"c" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.patternList" "recordGrobForPatternResolution" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"vapply" "order" "enexpr" "inject" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.finite" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
"is.gpar" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.text" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "push.vp.vpStack" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"unit" "is.unit" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"makeContent" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.na" "apply" "find.package" 
".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"read.dcf" "is.data.frame" "colnames" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "pkgload::load_all" "devtools::load_all" 
"grDevices::colors" "%in%" "is_r_color" "make_ansi_style" "get_rstudio_fg_color0" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "get_rstudio_fg_color" "update_rstudio_color" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"parse" "withCallingHandlers" "suppressWarnings" ".parse_code_file" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".Call" "do.call" "withCallingHandlers" "chain_call" "process_initialize" "initialize" "process$new" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_read_output" "proc$read_output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "do_output" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"as.list" "alist" "eval" "eval" "see_if" "assert_that" "poll" "process_poll_io" "proc$poll_io" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"diff" "which" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_version_raw" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "setup_ns_imports" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"structure" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "%in%" "is_loaded" "ns_env" "load_data" "pkgload::load_all" "devtools::load_all" 
"file" "readLines" "match_contents" "f" "find_root" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "parse_ns_file" "setup_ns_exports" "pkgload::load_all" "devtools::load_all" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"sort.default" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"putconst" "cb$commitlocs" "codeBufCode" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpPackage" "impl" ".rs.rpc.get_help" 
"putconst" "cb$putcode" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpFromObject" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"fsub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"file" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"file.exists" "FUN" "lapply" "find.package" "system.file" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"gsub" "fsub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"find.package" "index.search" "utils::help" ".External2" "inject" "help" "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.getHelp" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"gsub" "fsub" "vhtmlify" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"system.file" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"grepl" "ifelse" "paste" "urlify" "paste0" "addh" "HTMLcomponents" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFunction" "impl" ".rs.rpc.get_help" 
"array" "table" ".assemble_things_into_a_data_frame" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc" "proj_desc" "uses_roxygen" "check_uses_roxygen" "use_rcpp" "usethis::use_rcpp_armadillo" 
"Sys.info" "tolower" "is_windows" "path_tidy" "path_expand" "path_norm" "path_abs" "path_rel" "proj_rel_path" "pth" "eval" "eval" "withCallingHandlers" "chain_error" "%??%" ".transformer" "%||%" "<Anonymous>" "glue" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "structure" "%in%" "cli__message" "cli::cli_bullets" "ui_bullets" "block_append" "roxygen_ns_append" "use_rcpp" "usethis::use_rcpp_armadillo" 
"parent.env" "findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "theme$string" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_rcpp" "usethis::use_rcpp_armadillo" 
"scan" "chosen_read_clip" "read_clip" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "clipr_available_handler" "clipr_results_check" "clipr::clipr_available" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_rcpp" "usethis::use_rcpp_armadillo" 
"writeChar" "write_nix" "chosen_write_clip" "write_clip" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "clipr_available_handler" "clipr_results_check" "clipr::clipr_available" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_rcpp" "usethis::use_rcpp_armadillo" 
"findFun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "callFun" "ns$getVersion" "get_data" "detect_new" "rstudio$detect" "num_ansi_colors" "...elt" "stopifnot" "cli::make_ansi_style" "lapply" "cli::combine_ansi_styles" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_rcpp" "usethis::use_rcpp_armadillo" 
"c" "structure" "create_ansi_style_tag" "create_ansi_style" "make_ansi_style" "FUN" "lapply" "<Anonymous>" "do.call" "FUN" "lapply" "structure" "code_highlight" "style$fmt" "clii_verbatim" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli_verbatim" "cli::cli_code" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "use_rcpp" "usethis::use_rcpp_armadillo" 
"scan" "chosen_read_clip" "read_clip" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "clipr_available_handler" "clipr_results_check" "clipr::clipr_available" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "use_rcpp" "usethis::use_rcpp_armadillo" 
"writeChar" "write_nix" "chosen_write_clip" "clipr::write_clip" "ui_code_snippet" "block_append" "roxygen_ns_append" "use_src" "use_rcpp" "usethis::use_rcpp_armadillo" 
"strsplit" "lapply" ".make_numeric_version" "numeric_version" "as.numeric_version" "Ops.numeric_version" "get_data" "detect_new" "rstudio$detect" "num_ansi_colors" "...elt" "stopifnot" "make_ansi_style" "create_formatter" "merge_embedded_styles" "clii__container_start" ".transformer" "%||%" "<Anonymous>" "glue" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "clii__inline" "app$inline" "clii__xtext" "app$xtext" "clii_text" "app$text" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli__fmt" "cli_fmt" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "ui_yep" "can_overwrite" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"utils::menu" "ui_yep" "can_overwrite" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"utils::menu" "ui_yep" "can_overwrite" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"utils::menu" "ui_yep" "can_overwrite" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"utils::menu" "ui_yep" "can_overwrite" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"utils::menu" "ui_yep" "can_overwrite" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"c" "push" "add_child" "clii__container_start" "clii_div" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli::cli_div" "ui_bullets" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"clii__cat_ln" "app$cat_ln" "clii__xtext" "app$xtext" "clii_text" "app$text" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli::cli_bullets" "ui_bullets" "write_over" "use_template" "use_rcpp" "usethis::use_rcpp_armadillo" 
"methods::is" "utils::getSrcref" "%||%" "chain_error" "%??%" ".transformer" "%||%" "<Anonymous>" "glue" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "structure" "%in%" "cli__message" "cli::cli_bullets" "ui_bullets" "edit_file" "use_rcpp" "usethis::use_rcpp_armadillo" 
"findCenvVar" "findLocVar" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.api.documentOpen" "<Anonymous>" "do.call" "callFun" "rstudioapi::navigateToFile" "edit_file" "use_rcpp" "usethis::use_rcpp_armadillo" 
".make_numeric_version" "package_version" "get_data" "detect_new" "rstudio$detect" "num_ansi_colors" "...elt" "stopifnot" "make_ansi_style" "create_formatter" "merge_embedded_styles" "clii__container_start" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "clii__inline" "app$inline" "clii__xtext" "app$xtext" "clii_text" "app$text" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli_server_default_safe" "cli_server_default" "cli__default_handler" "doWithOneRestart" "withOneRestart" "withRestarts" "cli__message_emit" "cli__message" "cli::cli_bullets" "ui_bullets" "use_makevars" "usethis::use_rcpp_armadillo" 
"paste0" ".transformer" "%||%" "<Anonymous>" "glue" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "structure" "%in%" "cli__message" "cli_bullets" "<Anonymous>" "cli__rec" "cli_fmt" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"file.exists" "find_package_root" "pkg_path" "pkg_links_to_rcpp" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"is.environment" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"as.list.default" "as.list" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
".Call" "do.call" "withCallingHandlers" "chain_call" "process_initialize" "initialize" "process$new" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "find.package" "system.file" "path.expand" "normalizePath" "get_start_path" "find_root" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "parse_ns_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "suppressWarnings" "s3_unregister" "unregister_methods" "unregister" "pkgload::load_all" "devtools::load_all" 
"lapply" "parse_deps" "FUN" "lapply" "idesc_get_deps" "description$get_deps" "load_imports" "pkgload::load_all" "devtools::load_all" 
"parse" "withCallingHandlers" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"exists" "env_coalesce" "populate_pkg_env" "pkgload::load_all" "devtools::load_all" 
"sum" "widthDetails.titleGrob" "widthDetails" "<Anonymous>" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"lapply" "sapply" "[.gList" "[" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"is.pattern" "recordGrobForPatternResolution" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"numnotnull" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"is.na" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"makeContext" "preDraw.gTree" "<Anonymous>" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"lapply" "sapply" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"lapply" "sapply" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"split.default" "split" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"as.factor" "split.default" "split" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getNamespace" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"dontCheck" "grid.Call" "grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"read.dcf" "is.data.frame" "colnames" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc_get" "sources" "mtime" "needs_compile" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"unique" "factor" "table" ".assemble_things_into_a_data_frame" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "load_imports" "pkgload::load_all" "devtools::load_all" 
"parse" "withCallingHandlers" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"idesc_get" "self$get" "check_encoding" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "export_lazydata" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"file.exists" ".rs.tutorial.findTutorials" 
"paste0" "vpname" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"close" "save" ".rs.saveGraphics" 
"is.na" "numnotnull" "validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"checkNA" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"makeContext" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
"dir.create" "safe.dir.create" "<Anonymous>" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "RcppArmadillo::RcppArmadillo.package.skeleton" 
"lapply" "sapply" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unique.default" "unique" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unlist" "vpPathFromVector" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unique.default" "sort.int" "as.factor" "split.default" "split" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.grob" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
".External" "grDevices:::png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"simplify2array" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"simplify2array" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call" "push.vp.viewport" "FUN" "lapply" "push.vp.vpStack" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"$" "validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unlist" "simplify2array" "sapply" "gList" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.pattern" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$<-" "set.gpar" "pushvpgp" "preDraw.grob" "<Anonymous>" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"dontCheck" "grid.Call" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
"unique" "simplify2array" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".rangeNum" "range" "range" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"length" "simplify2array" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
"is.gpar" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[[" "check.length" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "dev.off" 
"gzfile" "readRDS" "packageDescription" "sprintf" "cbind" "RcppArmadillo::RcppArmadillo.package.skeleton" 
"formals" "match.arg" "textConnection" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "pkgload::load_all" "devtools::load_all" 
"validate_signal_args" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"%in%" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_version_raw" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"apply" "path" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "process_imports" "load_imports" "pkgload::load_all" "devtools::load_all" 
"readLines" "read_lines_enc" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"names" "checkConflicts" "base::attach" "attach_ns" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"getwd" "srcfilecopy" "parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"structure" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "pkgload::load_all" "devtools::load_all" 
"FUN" "vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc" "pkg_links_to_cpp11" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"%in%" "deparse" "predicate" "f" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"f" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" "gatherer" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"file" "readLines" "iconv" "withCallingHandlers" "suppressWarnings" ".parse_code_file" ".find_calls" ".find_calls_in_file" "FUN" "lapply" ".find_calls_in_package_code" "package_ff_call_db" "package_native_routine_registration_db" "tools::package_native_routine_registration_skeleton" "<Anonymous>" ".Call" "Rcpp::compileAttributes" "update_registration" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"FUN" "vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc_get" "pkg_name" "paste" "dll_path" "mtime" "needs_clean" "as.list.environment" "as.list" "within" "convert_and_check_my_args" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"isTRUE" "Sys.getenv" "num_ansi_colors" "...elt" "stopifnot" "cli::make_ansi_style" "style" "do_new_check" "FUN" "lapply" "block_cb" "stdout_callback" "do_output" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "methods::is" "utils::getSrcref" "chain_call" "process_is_alive" "proc$is_alive" "run_manage" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "do.call" "force" "with_envvar" "eval" "eval" "with.default" "with" "run_r" "callr::rcmd_safe" "withCallingHandlers" "with_build_tools" "rcmd_build_tools" "install_min" "build" "force" "withr_with_envvar" "force" "force" "withr_with_envvar" "withr_with_makevars" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"FUN" "vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_version_raw" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"grepl" "match_contents" "f" "find_root" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "file.path" "package_file" "load_data" "pkgload::load_all" "devtools::load_all" 
"[[" "Ops.data.frame" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "setup_ns_exports" "pkgload::load_all" "devtools::load_all" 
"FUN" "lapply" "find.package" "system.file" "FUN" "vapply" ".rs.isPackageInstalled" ".rs.isPackageVersionInstalled" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"save" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.saveOptions" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"gc" "closeAllConnections" "sys.save.image" 
"file.rename" "save.image" "sys.save.image" 
