sample.interval=20000
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"%in%" ".getGeneric" "getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"sum" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"diag" "get_U_ij" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "calculate_alg2" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_Y_ij0" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"+" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"getClass" "<Anonymous>" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"as.array" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"as.array" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"length" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"vapply" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_gradient_il" "get_gradient_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"check_formula" "f_env" "rlang::as_function" "as_mapper.default" "as_mapper" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"c" "get_indeces" "get_Y_i_mat" "get_Y_i_vec" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_gradient_il" "get_gradient_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_Y_i_vec" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"logical" "vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"c" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "calculate_alg2" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"%*%" "MASS::ginv" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"c" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
".classEnv" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"abs" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "fast_mat_mult3" "get_gradient_il" "get_gradient_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_B_ij" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_mu_ij" "get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"tcrossprod" "get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"all" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"vapply" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"data.class" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"t" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"sum" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"sys.function" "callNextMethod" "initialize" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"c" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"rlang::as_function" "as_mapper.default" "as_mapper" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "calculate_alg2" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"any" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"isTRUE" "which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_Y_ij0" "get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"is.call" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"vapply" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".getGeneric" "getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sum" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"graph.adjacency.dense" "igraph::graph_from_adjacency_matrix" "get_clusters" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"double" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"c" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"graph.adjacency.dense" "igraph::graph_from_adjacency_matrix" "get_clusters" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"vapply" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_i_mat" "get_Y_i_vec" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isS4" "is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"graph.adjacency.dense" "igraph::graph_from_adjacency_matrix" "get_clusters" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "vapply" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sys.parent" "sys.function" "formals" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.logical" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"length" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"numeric" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_B_ij" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unique.default" "unique" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"abs" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "fast_mat_mult3" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"paste0" ".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unique" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attributes" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isTRUE" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"abs" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.environment" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Z_ijl" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"dim" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_ij0" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"*" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"max" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"+" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_B_ij" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"callNextMethod" "initialize" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sum" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.array" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "as.vector" "get_Y_i_vec" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"getClass" "<Anonymous>" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unique" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".getGeneric" "getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" "callNextMethod" "initialize" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get" ".getMethodsTable" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"any" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.atomic" "matrix" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_B_ij" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"cat" "pb$up" "utils::setTxtProgressBar" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isTRUE" "which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".getClassesFromCache" "getClassDef" "getClass" ".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_i_mat" "get_Y_i_vec" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_ij0" "get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".identC" "is" "callNextMethod" "initialize" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"any" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_i_vec" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".getGeneric" "getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".class1" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"class" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_alg2" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"any" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"getGeneric" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"data.class" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_ij0" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t" "as.vector" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isTRUE" "which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"getClass" ".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.matrix" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_B_ij" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sum" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"names" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"*" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".getGeneric" "getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" "callNextMethod" "initialize" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"crossprod" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_indeces" "get_Y_i_mat" "get_Y_i_vec" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"graph.adjacency.dense" "igraph::graph_from_adjacency_matrix" "get_clusters" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"c" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"callNextMethod" "initialize" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"*" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "get_Y_i_vec" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"exists" ".getMethodsTable" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"%*%" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t" "MASS::ginv" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_alg2" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"numeric" "get_mu_i" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"*" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_mu_i" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"length" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"match.fun" "vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sys.function" "callNextMethod" "initialize" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_ij0" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"*" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"length" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"getGeneric" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_ij0" "get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_B_ij" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"c" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"length" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"diag" "get_U_ij" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"cat" "pb$up" "utils::setTxtProgressBar" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sys.frame" "eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sqrt" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"Cj" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"numeric" "get_mu_i" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attributes" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "get_U_ij" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"any" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"%||%" "getNamespace" "get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"getClass" ".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get" ".getMethodsTable" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"dim" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"abs" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"cat" "pb$up" "utils::setTxtProgressBar" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"length" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "algorithm2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.environment" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sys.parent" "sys.function" "formals" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.vector" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_mu_ij" "get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_i_vec" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"which" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"...elt" "stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".findMethodInTable" ".quickCoerceSelect" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"exists" ".getMethodsTable" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"cat" "pb$up" "utils::setTxtProgressBar" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.finite" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"aperm.default" "aperm" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"abs" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"tcrossprod" "outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"as.matrix" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"outer" ".kronecker" "kronecker" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"data.class" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"matrix" "La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ijk" "get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"anyNA" "stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_i_mat" "get_Y_i_vec" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "calculate_beta_lp_new" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"diag" "get_U_ij" "get_partials_ijl" "get_partials_il" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"-" "get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"anyNA" "stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"attr.all.equal" "all.equal.character" "attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"mode" "data.class" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Y_i_vec" "get_Yi_minus_mui" "get_gradient_il" "get_gradient_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"sys.parent" "sys.function" "formals" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"La.svd" "svd" "MASS::ginv" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".m2sparse" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"-" "get_Y_ij0" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_mu_i" "get_Yi_minus_mui" "get_pearson_residual_i" "get_pearson_residuals" "get_phi" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"diag" "get_U_ij" "get_V_ijj" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"FUN" "lapply" "unlist" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"t.default" "t" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_alpha_ij" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_i" ".f" "<Anonymous>" "call_with_cleanup" "withCallingHandlers" "with_indexed_errors" "map_" "purrr::map" "get_alpha_list" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"get_partials_il" "get_partials_l_list" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"graph.adjacency.dense" "igraph::graph_from_adjacency_matrix" "get_clusters" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" ".m2sparse.checking" "asMethod" "as" "asCspN" ".M2T" "FUN" "lapply" "standardGeneric" "unname" ".bdiag" ".M2C" "Matrix::bdiag" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "get_Vi_inv" "get_V_inv" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
".Call" "fast_mat_mult3" "get_Hessian_il" "get_Hessian_l" "update_beta_admm" "algorithm3" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "algorithm1" "cleverly" 
"graph.adjacency.dense" "igraph::graph_from_adjacency_matrix" "get_clusters" "algorithm1" "cleverly" 
"lapply" "summaryRprof" 
"plot_clusters" 
"encode_c" "farver::encode_colour" "palette" "self$palette" "map" "scale$map" "extract_key" "self$extract_key" ".External2" "inject" "train" "guide$train" "<Anonymous>" "mapply" "Map" "train" "guides$train" "build" "<Anonymous>" "ggplot_build.ggplot" "ggplot2::ggplot_build" "ggplot_add.new_aes" "ggplot_add" "add_ggplot" "+.gg" "+" "plot_clusters" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"seq" "labeling::extended" "transformation$breaks" "get_breaks" "scale$get_breaks" "view_scale_primary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
".External2" "FUN" "lapply" "hash" "train" "guide$train" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" "diff.default" "diff" "rescale.numeric" "rescaler" "self$rescaler" "rescale" "<Anonymous>" "rescale" "FUN" "lapply" "transform_position" "transform" "coord$transform" "coord_munch" "draw_panel" "self$draw_panel" ".External2" "inject" "FUN" "lapply" "draw_layer" "<Anonymous>" "draw_geom" "l$draw_geom" "f" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "by_layer" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"[.data.frame" "[" "unique0" "nrow" ".Call" "list2" "data_frame" "data_frame0" "fun" "apply_fun" "FUN" "lapply" "dapply" "draw_panel" "self$draw_panel" ".External2" "inject" "FUN" "lapply" "draw_layer" "<Anonymous>" "draw_geom" "l$draw_geom" "f" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "by_layer" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"f" "Reduce" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "setup_elements" "Guide$setup_elements" "setup_elements" "self$setup_elements" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_v" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"Reduce" "FUN" "lapply" "calc_element" "FUN" "lapply" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "<Anonymous>" "grid.Call" "convertUnit" "convertHeight" "FUN" "lapply" "unlist" "FUN" "apply" "is.unit" "unit" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"lapply" "sapply" "gList" ".External2" "inject" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"depth" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"as.list" "lapply" "sapply" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"sys.call" "%in%" "[[.data.frame" "[[" "unique" "transform" "guide$transform" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"save" ".rs.saveGraphics" 
"diff.default" "diff" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"load" ".rs.restoreGraphics" 
"load" ".rs.restoreGraphics" 
"load" ".rs.restoreGraphics" 
"load" ".rs.restoreGraphics" 
".External2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grDevices::replayPlot" "withCallingHandlers" "suppressWarnings" ".rs.restoreGraphics" 
"as.list" "lapply" "sapply" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".External2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grDevices::replayPlot" "withCallingHandlers" "suppressWarnings" ".rs.restoreGraphics" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".External2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grDevices::replayPlot" "withCallingHandlers" "suppressWarnings" ".rs.restoreGraphics" 
"mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".External2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grDevices::replayPlot" "withCallingHandlers" "suppressWarnings" ".rs.restoreGraphics" 
"paste0" "vpname" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".External2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grDevices::replayPlot" "withCallingHandlers" "suppressWarnings" ".rs.restoreGraphics" 
"names" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".External2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grDevices::replayPlot" "withCallingHandlers" "suppressWarnings" ".rs.restoreGraphics" 
"drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".External2" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grDevices::replayPlot" "withCallingHandlers" "suppressWarnings" ".rs.restoreGraphics" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"gsub" "strsplit" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"substring" "split" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"as.factor" "split.default" "split" "vapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"FUN" "vapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"FUN" "vapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"tools:::.remove_stale_dups" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"strsplit" "unlist" "srcfilecopy" "parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"strsplit" "unlist" "srcfilecopy" "parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"is.call" "handleColonCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"gsub" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"is.factor" "duplicated.default" "duplicated" "setdiff" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"is.unit" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"is.pattern" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"is.patternList" "recordGTreeForPatternResolution" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"strsplit" "unlist" "vpPathFromVector" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"names" "numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"valid.charjust" "valid.just" "resolveVJust" "grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"names" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"vpPathFromVector" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"paste" "as.character.path" "as.character" "as.character" "strsplit" "unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "grDevices:::png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"FUN" "lapply" "sapply" "gList" ".External2" "inject" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"numnotnull" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"numnotnull" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"is.function" "match.fun" "sapply" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"strsplit" "unlist" "vpPathFromVector" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$<-" "pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"strsplit" "unlist" "vpPathFromVector" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"strsplit" "unlist" "vpPathFromVector" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"enexpr" "inject" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"names" "checkNA" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"depth" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$" "validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"lapply" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"split" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"isMask" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"sapply" "gList" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"dontCheck" "grid.Call" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"list" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"%in%" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"preDrawDetails" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"[[" "check.length" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"postDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"lapply" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"makeContext" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[[" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"list" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"diff.default" "diff" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$" "grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"diff" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is.na" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"simplify2array" "sapply" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unique" "simplify2array" "sapply" "gList" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"postDrawDetails" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"FUN" "vapply" "FUN" "lapply" "getDLLRegisteredRoutines.DLLInfo" "getDLLRegisteredRoutines" ".rs.extractNativeSymbols" ".rs.getNativeSymbols" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"numnotnull" "validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"simplify2array" "sapply" "gList" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unit" "is.unit" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"is.pattern" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"$" "rootVP" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unlist" "vpPathFromVector" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"preDrawDetails" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"paste" "as.character.path" "as.character" "as.character" "strsplit" "unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"matrix" "valid.layout" "grid.layout" "gtable_layout" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"simplify2array" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
".rangeNum" "range" "range" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"names" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"names" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"FUN" "lapply" "sapply" "depth.vpStack" "depth" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"recordGrobForPatternResolution" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unit" "is.unit" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"%in%" "validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"names" "names" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"structure" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"checkNA" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"depth" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"gzfile" "save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"any" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"check.length" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"length" "valid.charjust" "valid.just" "valid.layout" "grid.layout" "gtable_layout" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"rev" "vpPathFromVector" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[[" "lapply" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.segments" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"split.default" "split" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"names" "names" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"length" "length" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"[[<-" "numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"rootVP" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"as.character" "as.character" "strsplit" "unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"as.list" "lapply" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"new.env" "pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validDetails" "validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"list" "vpPathFromVector" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"valid.charjust" "valid.just" "resolveVJust" "grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"rootVP" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"setChildren" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"list" "vpPathFromVector" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"%in%" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"names" "names" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$<-" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"dontCheck" "grid.Call" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"list.files" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"make.names" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "path" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "pkgload::load_all" "devtools::load_all" 
"length" "match_selector" "clii__container_start" ".transformer" "%||%" "<Anonymous>" "glue" ".transformer" "%||%" "<Anonymous>" "glue" "FUN" "lapply" "clii__inline" "app$inline" "clii__xtext" "app$xtext" "clii_text" "app$text" "FUN" "lapply" "clii_bullets" "<Anonymous>" "do.call" "cli__fmt" "cli_fmt" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"description$new" "desc_desc_get_field" "pkg_name" "setup_ns_imports" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"check_installed" "deps_check_installed" "load_imports" "pkgload::load_all" "devtools::load_all" 
"load_code" "pkgload::load_all" "devtools::load_all" 
"readLines" "parseNamespaceFile" "parse_ns_file" "register_s3" "pkgload::load_all" "devtools::load_all" 
"asNamespace" "setNamespaceInfo" "load_dll" "pkgload::load_all" "devtools::load_all" 
"names" "checkConflicts" "base::attach" "attach_ns" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "export_lazydata" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
".rs.tutorial.findTutorials" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"conditionMessage" "paste0" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"handleRequireNamespaceCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
".Call" ".rs.readPrefInternal" ".rs.readUiPref" "<Anonymous>" "do.call" "callFun" "rstudioapi::getThemeInfo" "withCallingHandlers" "suppressWarnings" "get_rstudio_theme" "get_rstudio_fg_color0" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "get_rstudio_fg_color" "update_rstudio_color" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "load_depends" "pkgload::load_all" "devtools::load_all" 
"attributes" "structure" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "load_imports" "pkgload::load_all" "devtools::load_all" 
"structure" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "%in%" "is_loaded" "ns_env" "load_data" "pkgload::load_all" "devtools::load_all" 
"paste" "<Anonymous>" "mapply" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "register_s3" "pkgload::load_all" "devtools::load_all" 
"file" "readLines" "is.factor" "grepl" "find_package_root" "find_description" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "export_lazydata" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"any" ".deparseOpts" "deparse" "mode" "%in%" "deparse" "paste" "deparse1" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"rgamma" "dirmult::rdirichlet" "stats::rmultinom" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"mode" "%in%" "deparse" "paste" "deparse1" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"make.names" "data.frame" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"map_lgl" "list_flatten" "dplyr::bind_rows" "sim_Z_longitudinal" 
"$" "aesthetics" "geom$aesthetics" "intersect" "layer" "ggplot2::geom_point" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"labeling::extended" "transformation$breaks" "get_breaks" "scale$get_breaks" "view_scale_primary" "view_scale_secondary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"enexpr" "inject" "make_proto_method" "$.ggproto" "$" "expand_limits_scale" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"<Anonymous>" "rescale" "FUN" "lapply" "transform_position" "transform" "coord$transform" "coord_munch" "transform" "guide$transform" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "by_layer" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"as.vector" "as.list.default" "as.list" "vapply" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "setup_elements" "Guide$setup_elements" "setup_elements" "self$setup_elements" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_h" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "<Anonymous>" "grid.Call" "convertUnit" "convertHeight" "FUN" "vapply" "measure" "is.unit" "unit" "measure_grobs" "self$measure_grobs" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_h" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "checkNameSlot" "validGrob.grob" "validGrob" "grob" "textGrob" "titleGrob" "element_grob.element_text" "<Anonymous>" ".External2" "exec" "draw_axis_labels" "FUN" "lapply" "build_labels" "self$build_labels" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_v" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "grobName" "ggname" "FUN" "lapply" "assemble_strips" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"numnotnull" "validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "push.vp.vpStack" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"close.connection" "close" "save" ".rs.saveGraphics" 
"validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"dontCheck" "grid.Call" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"$" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"setChildren" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"paste0" "vpname" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"diff" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
".External" "grDevices:::png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.polyline" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$<-" "pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"setChildren" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.text" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$<-" "validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"checkNA" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"is_string" "FUN" "lapply" "unlist" "Filter" "<Anonymous>" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validDetails" "validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"makeContext" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"unlist" "%in%" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "pkgload::load_all" "devtools::load_all" 
".standard_regexps" "sprintf" ".make_numeric_version" "package_version" "<Anonymous>" "do.call" "callFun" "ns$getVersion" "get_data" "detect_new" "rstudio$detect" "num_ansi_colors" "...elt" "stopifnot" "make_ansi_style" "get_rstudio_fg_color0" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "get_rstudio_fg_color" "update_rstudio_color" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"description$new" "desc::desc_get" "pkg_name" "paste" "dll_path" "mtime" "needs_compile" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"structure" "parseDirective" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"grepl" "find.package" "system.file" "withCallingHandlers" "suppressWarnings" "is_on_disk" "<Anonymous>" "mapply" "do.call" "pmap" "enexpr" "inject" "list_c" "detect_installed" "check_installed" "deps_check_installed" "load_imports" "pkgload::load_all" "devtools::load_all" 
"as_locale_cats" "local_locale" "with_locale" "withr_with_collate" "find_code" "load_code" "pkgload::load_all" "devtools::load_all" 
"file" "read_lines_enc" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"lapply" "FUN" "lapply" "assignNativeRoutines" "load_dll" "pkgload::load_all" "devtools::load_all" 
"names" "checkConflicts" "base::attach" "attach_ns" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"names" "checkConflicts" "base::attach" "attach_ns" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"file.exists" ".rs.tutorial.findTutorials" 
".rs.tutorial.findTutorials" 
"vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "pkgload::load_all" "devtools::load_all" 
"Sys.getenv" "isBackgroundJob" "isJob" "callFun" "ns$getVersion" "get_data" "detect_new" "rstudio$detect" "num_ansi_colors" "...elt" "stopifnot" "make_ansi_style" "get_rstudio_fg_color0" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "get_rstudio_fg_color" "update_rstudio_color" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_version_raw" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"file.exists" "system.file" "withCallingHandlers" "suppressWarnings" "is_on_disk" "<Anonymous>" "mapply" "do.call" "pmap" "enexpr" "inject" "list_c" "detect_installed" "check_installed" "deps_check_installed" "load_imports" "pkgload::load_all" "devtools::load_all" 
"parse" "withCallingHandlers" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
".subset2" "<Anonymous>" "[[.data.frame" "[[" "Ops.data.frame" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "setup_ns_exports" "pkgload::load_all" "devtools::load_all" 
"[[.data.frame" "[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"rbind" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"rownames<-" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"<Anonymous>" "[[.data.frame" "[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"$.ggproto" "$" ".Call" "list2" "ggproto" "view_scale_primary" "view_scale_secondary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"labeling::extended" "transformation$breaks" "get_breaks" "scale$get_breaks" "view_scale_primary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"super" "fetch_ggproto" "fetch_ggproto" "fetch_ggproto" "$.ggproto" "$" "get_breaks" "scale$get_breaks" "view_scale_primary" "view_scale_secondary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"extended_breaks" "structure" "new_transform" "transform_identity" "expand_limits_continuous_trans" "expand_limits_continuous" "expand_limits_scale" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
".External2" "call2" "enexpr" "inject" "make_proto_method" "$.ggproto" "$" "rescale" "FUN" "lapply" "transform_position" "transform" "coord$transform" "transform" "guide$transform" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "grobName" "ggname" "FUN" "lapply" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"make_proto_method" "$.ggproto" "$" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_h" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"simplify2array" "sapply" "gList" "setChildren" "gTree" "absoluteGrob" "assemble_drawing" "self$assemble_drawing" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_v" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"unlist" "unit.c" "titleGrob" "element_grob.element_text" "element_grob" "FUN" "lapply" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"%||%" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"names" "checkNA" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"$" "as.character.path" "as.character" "as.character" "strsplit" "unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"%in%" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call" "grid.Call.graphics" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"is.call" "handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"unlist" "%in%" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "pkgload::load_all" "devtools::load_all" 
"stopifnot" "idesc_get" "self$get" "check_encoding" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc::desc_get" "pkg_name" "paste" "dll_path" "mtime" "needs_compile" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "setup_ns_imports" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
".libPaths" "find.package" "system.file" "withCallingHandlers" "suppressWarnings" "is_on_disk" "<Anonymous>" "mapply" "do.call" "pmap" "enexpr" "inject" "list_c" "detect_installed" "check_installed" "deps_check_installed" "load_imports" "pkgload::load_all" "devtools::load_all" 
".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"dyn.load" "library.dynam2" "load_dll" "pkgload::load_all" "devtools::load_all" 
"names" "checkConflicts" "base::attach" "attach_ns" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"rgamma" "dirmult::rdirichlet" "stats::rmultinom" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"%in%" "[[.data.frame" "[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"%in%" "[[.data.frame" "[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"%in%" "[[.data.frame" "[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"dirmult::rdirichlet" "stats::rmultinom" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"is.matrix" "<Anonymous>" "[[.data.frame" "[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ2" "sim_Z_longitudinal" 
"strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"deduplicate_spec" "pivot_longer_spec" "pivot_longer.data.frame" "tidyr::pivot_longer" "dplyr::mutate" "ggplot2::ggplot" ".External2" "%>%" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"c" "structure" "new_aes" "[.uneval" "[" "compute_aesthetics" "l$compute_aesthetics" "f" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "by_layer" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"fetch_ggproto" "fetch_ggproto" "fetch_ggproto" "fetch_ggproto" "$.ggproto" "$" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"unlist" "order" "FUN" "lapply" "scale_apply" "FUN" "lapply" "map_position" "layout$map_position" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
".Call" "list2" "data_frame" "extract_decor" "self$extract_decor" ".External2" "inject" "train" "guide$train" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"make_proto_method" "$.ggproto" "$" "extract_key" "Guide$extract_key" "extract_key" "self$extract_key" ".External2" "inject" "train" "guide$train" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "checkNameSlot" "validGrob.grob" "validGrob" "grob" "polylineGrob" "element_grob.element_line" "element_grob" "element_render" "gList" "setChildren" "gTree" "grobTree" "grobName" "ggname" "guide_grid" "render_bg" "<Anonymous>" "FUN" "lapply" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"numnotnull" "validGP" "gpar" "is.gpar" "valid.viewport" "<Anonymous>" ".External2" "exec" "assemble_drawing" "self$assemble_drawing" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_h" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"length" "length" "apply" "assemble_strips" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "checkNameSlot" "validGrob.gTree" "validGrob" "gTree" "grobName" "ggname" "FUN" "lapply" "assemble_strips" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"paste0" "vpname" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"paste" "as.character.path" "as.character" "as.character" "strsplit" "unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"valid.charjust" "valid.just" "valid.layout" "grid.layout" "gtable_layout" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$" "as.character.path" "as.character" "as.character" "strsplit" "unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"length" "withCallingHandlers" "base::suppressWarnings" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"strsplit" "unlist" "srcfilecopy" "parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"getLoadedDLLs" ".rs.getNativeSymbols" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"%in%" "deparse" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "path" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "idesc_create" "initialize" "description$new" "desc_desc" "pkg_desc" "pkgload::load_all" "devtools::load_all" 
"lapply" "unlist" "clii__container_end" "clii_end" "<Anonymous>" "do.call" "cli__fmt" "cli_fmt" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"normalizePath" "get_start_path" "find_root" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_version_raw" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"sub" "FUN" "lapply" "parse_deps" "FUN" "lapply" "idesc_get_deps" "description$get_deps" "load_imports" "pkgload::load_all" "devtools::load_all" 
"FUN" "lapply" "find.package" "system.file" "withCallingHandlers" "suppressWarnings" "is_on_disk" "<Anonymous>" "mapply" "do.call" "pmap" "enexpr" "inject" "list_c" "detect_installed" "check_installed" "deps_check_installed" "load_imports" "pkgload::load_all" "devtools::load_all" 
"readLines" "read_lines_enc" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"dyn.load" "library.dynam2" "load_dll" "pkgload::load_all" "devtools::load_all" 
"idesc_get" "self$get" "check_encoding" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "setup_ns_exports" "pkgload::load_all" "devtools::load_all" 
"parse_ns_file" "export_ns" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"file.exists" ".rs.tutorial.findTutorials" 
"[[.data.frame" "[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"%in%" ".deparseOpts" "deparse" "paste" "deparse1" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"stopifnot" "sample.int" "sample" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"t" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"[[" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"exprs_auto_name" "quos_auto_name" "as_quosures" "f_as_facets" "f_as_facets_list" "as_facets_list" "wrap_as_facets_list" "ggplot2::facet_wrap" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"make_proto_method" "$.ggproto" "$" "view_scale_primary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"$" "get_breaks" "scale$get_breaks" "view_scale_primary" "view_scale_secondary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" "assign" "make_proto_method" "$.ggproto" "$" "extract_key" "Guide$extract_key" "extract_key" "self$extract_key" ".External2" "inject" "train" "guide$train" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"exists" "fetch_ggproto" "$.ggproto" "$" "transform_position" "transform" "coord$transform" "transform" "guide$transform" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "by_layer" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "grobName" "ggname" "element_render" "gList" "setChildren" "gTree" "grobTree" "grobName" "ggname" "guide_grid" "render_bg" "<Anonymous>" "FUN" "lapply" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "checkNameSlot" "validGrob.gTree" "validGrob" "gTree" "titleGrob" "element_grob.element_text" "<Anonymous>" ".External2" "exec" "draw_axis_labels" "FUN" "lapply" "build_labels" "self$build_labels" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_h" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "checkNameSlot" "validGrob.gTree" "validGrob" "gTree" "titleGrob" "element_grob.element_text" "<Anonymous>" ".External2" "exec" "draw_axis_labels" "FUN" "lapply" "build_labels" "self$build_labels" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_v" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"empty" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"matrix" "apply" "measure_grobs" "self$measure_grobs" "draw" "<Anonymous>" "draw" "self$draw" "assemble" "<Anonymous>" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"vpPathFromVector" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "simplify2array" "sapply" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$<-" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"length" "withCallingHandlers" "base::suppressWarnings" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" ".Call" "<Anonymous>" "do.call" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"c" "%in%" "deparse" "mode" "%in%" "deparse" "paste" "deparse1" "as.data.frame.character" "as.data.frame" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "path" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "pkgload::load_all" "devtools::load_all" 
"unique" "substr" "str_tail" "FUN" "lapply" "FUN" "lapply" "%||%" "unique.default" "I" "data.frame" "theme_create" "structure" "clii_add_theme" "app$add_theme" "clii_div" "<Anonymous>" "do.call" "cli__fmt" "cli_fmt" "format_message" "%||%" "rlang::inform" "cli::cli_inform" "pkgload::load_all" "devtools::load_all" 
"dir" "headers" "mtime" "needs_compile" "pkgbuild::compile_dll" "pkgload::load_all" "devtools::load_all" 
"grepl" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "create_ns_env" "pkgload::load_all" "devtools::load_all" 
"FUN" "vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "load_imports" "pkgload::load_all" "devtools::load_all" 
"vapply" "which" "find_field_class" "paste0" "<Anonymous>" "mapply" "structure" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "initialize" "description$new" "desc_desc_get_field" "pkg_name" "%in%" "is_loaded" "ns_env" "load_data" "pkgload::load_all" "devtools::load_all" 
"parse" "withCallingHandlers" "source_one" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".External" "try_fetch" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "devtools::load_all" 
"find_root" "find_root_file" "rprojroot_find_package_root_file" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "pkg_path" "file.path" "package_file" "uses_testthat" "isTRUE" "pkgload::load_all" "devtools::load_all" 
"names" "checkConflicts" "base::attach" "attach_ns" "setup_pkg_env" "pkgload::load_all" "devtools::load_all" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"structure" "eigen" "MASS::mvrnorm" "t" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"eigen" "MASS::mvrnorm" "t" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"as.data.frame.numeric" "as.data.frame" "data.frame" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"data.frame" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"%in%" "[.data.frame" "[" "matrix" "Dirichlet.multinomial" "generate_data_longitudinal_compositionalZ" "sim_Z_longitudinal" 
"vec_as_names" "withCallingHandlers" "subclass_name_repair_errors" "repaired_names" "set_repaired_names" "tibble_quos" "tibble" "build_longer_spec" "pivot_longer.data.frame" "tidyr::pivot_longer" "dplyr::mutate" "ggplot2::ggplot" ".External2" "%>%" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"grid.newpage" "print.ggplot" "<Anonymous>" 
"labeling::extended" "transformation$breaks" "get_breaks" "scale$get_breaks" "view_scale_primary" "view_scales_from_scale" "setup_panel_params" "<Anonymous>" "<Anonymous>" "mapply" "Map" "setup_panel_params" "layout$setup_panel_params" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
".External" "<Anonymous>" "enexpr" "inject" "make_proto_method" "$.ggproto" "$" "setup_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" "diff.default" "diff" "rescale.numeric" "rescaler" "self$rescaler" "rescale" "<Anonymous>" "rescale" "FUN" "lapply" "transform_position" "transform" "coord$transform" "coord_munch" "transform" "guide$transform" "<Anonymous>" "mapply" "Map" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"get_guide" "<Anonymous>" "train_panel_guides" "FUN" "lapply" "setup_panel_guides" "layout$setup_panel_guides" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"[[.data.frame" "[[" "train" "self$train" "train_df" "scale$train_df" "FUN" "lapply" "train_df" "FUN" "lapply" "ggplot_build.ggplot" "ggplot_build" "print.ggplot" "<Anonymous>" 
"axis_label_element_overrides" "override_elements" "self$override_elements" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_h" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"paste" "grobAutoName" "checkNameSlot" "validGrob.grob" "validGrob" "grob" "textGrob" "titleGrob" "element_grob.element_text" "<Anonymous>" ".External2" "exec" "draw_axis_labels" "FUN" "lapply" "build_labels" "self$build_labels" "draw" "<Anonymous>" "panel_guides_grob" "render_axis_v" "FUN" "lapply" "render_axes" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"check.length" "numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "<Anonymous>" "grid.Call" "convertUnit" "convertHeight" "FUN" "lapply" "unlist" "max_height" "assemble_strips" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"lapply" "calc_element" "FUN" "lapply" "build_strip" "render_strips" "draw_panels" "<Anonymous>" "render" "layout$render" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"head" "measure_grobs" "self$measure_grobs" "draw" "<Anonymous>" "draw" "self$draw" "assemble" "<Anonymous>" "ggplot_gtable.ggplot_built" "ggplot_gtable" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "print.ggplot" "<Anonymous>" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.text" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"paste0" "vpname" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.text" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"heightDetails" "<Anonymous>" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"numnotnull" "validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"$<-" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"postDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"unique" "simplify2array" "sapply" "[.gList" "[" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"strsplit" "unlist" "vpPathFromVector" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"as.character.path" "as.character" "as.character" "strsplit" "unlist" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"numnotnull" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"base:::body" 
"validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"checkvpSlot" "validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"strsplit" "unlist" "vpPathFromVector" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"c" "valid.charjust" "valid.just" "vpObject" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGrob.gTree" "validGrob" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.rect" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"dontCheck" "grid.Call" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushedvp" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"parent.frame" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"lapply" "sapply" "gList" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"unlist" "vpPathFromVector" "[.vpPath" "[" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"rootVP" "current.vpPath" "upViewport" "popgrobvp.viewport" "popgrobvp" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"cbind" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"gsub" "strsplit" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"startsWith" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"startsWith" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"unlist" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"split.default" "split" "vapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"checkNA" "validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"lengths" "unique" "simplify2array" "sapply" "setChildren" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
"setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.layout" "gtable_layout" "valid.viewport" "viewport" "makeContext.gtable" "makeContext" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"postDrawDetails" "postDraw.grob" "postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "NextMethod" "grid.draw.absoluteGrob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"postDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"dim" "dim" "NROW" "NextMethod" "[.factor" "[" ".rs.formatDataColumn" 
"getLoadedDLLs" ".rs.getNativeSymbols" 
"resolveHJust" "grid.Call" "widthDetails.text" "widthDetails" "<Anonymous>" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"setChildren" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"check.length" "numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"numnotnull" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEplayDisplayList" 
"save" ".rs.saveGraphics" 
"save" ".rs.saveGraphics" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "gpar" "is.gpar" "valid.viewport" "viewport" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"numnotnull" "validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"validGP" "set.gpar" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"lapply" "sapply" "gList" "setChildren" "gTree" "<Anonymous>" "mapply" "makeContent.gtable" "makeContent" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"postDrawDetails" "postDraw.grob" "<Anonymous>" "grid.Call.graphics" "push.vp.viewport" "FUN" "lapply" "pushViewport" "pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"numnotnull" "validGP" "set.gpar" "pushvpgp" "preDraw.grob" "preDraw" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"grid.Call.graphics" "drawDetails.points" "drawDetails" "drawGrob" "recordGraphics" "grid.draw.grob" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
"pushgrobvp.viewport" "pushgrobvp" "pushvpgp" "preDraw.gTree" "preDraw" "drawGTree" "recordGraphics" "grid.draw.gTree" "grid.draw" "drawGTree" ".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.GEcopyDisplayList" 
